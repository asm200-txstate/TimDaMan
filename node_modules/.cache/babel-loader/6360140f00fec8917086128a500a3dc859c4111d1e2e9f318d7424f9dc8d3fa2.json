{"ast":null,"code":"var _jsxFileName = \"/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/WordleComponents/Row/Row.js\";\nimport React from 'react';\nimport Tile from '../../Tile/Tile';\nimport './Row.css';\nimport { GAME_STATES } from '../../../gameStates';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Row({\n  index,\n  guesses,\n  guess,\n  word,\n  gameState\n}) {\n  const isCurrentRow = gameState === GAME_STATES.PLAYING && index === guesses.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Row\",\n    children: [...Array(5)].map((_, i) => {\n      var _guesses$index;\n      return /*#__PURE__*/_jsxDEV(Tile, {\n        index: i,\n        value: isCurrentRow ? guess === null || guess === void 0 ? void 0 : guess[i] : guesses === null || guesses === void 0 ? void 0 : (_guesses$index = guesses[index]) === null || _guesses$index === void 0 ? void 0 : _guesses$index[i],\n        isCurrentRow: isCurrentRow,\n        rowHasGuess: !!(guesses !== null && guesses !== void 0 && guesses[index]),\n        word: word\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n_c = Row;\nvar _c;\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"names":["React","Tile","GAME_STATES","jsxDEV","_jsxDEV","Row","index","guesses","guess","word","gameState","isCurrentRow","PLAYING","length","className","children","Array","map","_","i","_guesses$index","value","rowHasGuess","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/WordleComponents/Row/Row.js"],"sourcesContent":["import React from 'react';\nimport Tile from '../../Tile/Tile';\nimport './Row.css';\nimport { GAME_STATES } from '../../../gameStates';\n\nexport default function Row({ index, guesses, guess, word, gameState }) {\n  const isCurrentRow =\n    gameState === GAME_STATES.PLAYING && index === guesses.length;\n\n  return (\n    <div className=\"Row\">\n      {[...Array(5)].map((_, i) => (\n        <Tile\n          key={i}\n          index={i}\n          value={isCurrentRow ? guess?.[i] : guesses?.[index]?.[i]}\n          isCurrentRow={isCurrentRow}\n          rowHasGuess={!!guesses?.[index]}\n          word={word}\n        />\n      ))}\n    </div>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAO,WAAW;AAClB,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,GAAGA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC,KAAK;EAAEC,IAAI;EAAEC;AAAU,CAAC,EAAE;EACtE,MAAMC,YAAY,GAChBD,SAAS,KAAKR,WAAW,CAACU,OAAO,IAAIN,KAAK,KAAKC,OAAO,CAACM,MAAM;EAE/D,oBACET,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjB,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC;MAAA,IAAAC,cAAA;MAAA,oBACtBhB,OAAA,CAACH,IAAI;QAEHK,KAAK,EAAEa,CAAE;QACTE,KAAK,EAAEV,YAAY,GAAGH,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAGW,CAAC,CAAC,GAAGZ,OAAO,aAAPA,OAAO,wBAAAa,cAAA,GAAPb,OAAO,CAAGD,KAAK,CAAC,cAAAc,cAAA,uBAAhBA,cAAA,CAAmBD,CAAC,CAAE;QACzDR,YAAY,EAAEA,YAAa;QAC3BW,WAAW,EAAE,CAAC,EAACf,OAAO,aAAPA,OAAO,eAAPA,OAAO,CAAGD,KAAK,CAAC,CAAC;QAChCG,IAAI,EAAEA;MAAK,GALNU,CAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMP,CAAC;IAAA,CACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACC,EAAA,GAlBuBtB,GAAG;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}