{"ast":null,"code":"// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CHATGPT_API_URL = 'https://api.openai.com/v1/chat/completions'; \n\n// require('dotenv').config();\n// const apiKey = process.env.API_KEY;\n\n// const ChatGPT = () => {\n//   const [userInput, setUserInput] = useState('');\n//   const [chatGPTResponse, setChatGPTResponse] = useState('');\n\n//   const generateChatGPTResponse = async () => {\n//     try{\n//         const response = await axios.post(\n//             CHATGPT_API_URL,\n//             {\n//                 model: 'gpt-3.5-turbo', \n//                 messages: [\n//                 { role: 'system', content: 'You are a helpful assistant.',},\n//                 { role: 'user', content: userInput, },\n//               ],\n//             }, {\n//                 headers: {\n//                     'Content-Type' : 'appllication/json',\n//                     'Authorization' : apiKey,\n//                 },\n//                 resolve: {\n//                     fallback: {\n//                       \"path\": require.resolve(\"path-browserify\"),\n//                       \"os\": require.resolve(\"os-browserify/browser\"),\n//                       \"crypto\": require.resolve(\"crypto-browserify\")\n//                     }\n//                 },\n//             },\n//         );\n//         setChatGPTResponse(response.data.choices[0].message.content);\n//     } catch (error){\n//         console.error('Error generating ChatGPT response:', error.response ? error.response.data : error.message);\n//     }\n//   }\n\n//   return (\n//     <div>\n//       <h1>ChatGPT React Example</h1>\n//       <div>\n//         <label>User Input:</label>\n//         <input\n//           type=\"text\"\n//           value={userInput}\n//           onChange={(e) => setUserInput(e.target.value)}\n//         />\n//       </div>\n//       <button onClick={generateChatGPTResponse}>Generate Response</button>\n//       <div>\n//         <h3>ChatGPT Response:</h3>\n//         <p>{chatGPTResponse}</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ChatGPT;","map":{"version":3,"names":[],"sources":["/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/hooks/ChatGPT.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import axios from 'axios';\n\n// const CHATGPT_API_URL = 'https://api.openai.com/v1/chat/completions'; \n\n// require('dotenv').config();\n// const apiKey = process.env.API_KEY;\n\n// const ChatGPT = () => {\n//   const [userInput, setUserInput] = useState('');\n//   const [chatGPTResponse, setChatGPTResponse] = useState('');\n\n//   const generateChatGPTResponse = async () => {\n//     try{\n//         const response = await axios.post(\n//             CHATGPT_API_URL,\n//             {\n//                 model: 'gpt-3.5-turbo', \n//                 messages: [\n//                 { role: 'system', content: 'You are a helpful assistant.',},\n//                 { role: 'user', content: userInput, },\n//               ],\n//             }, {\n//                 headers: {\n//                     'Content-Type' : 'appllication/json',\n//                     'Authorization' : apiKey,\n//                 },\n//                 resolve: {\n//                     fallback: {\n//                       \"path\": require.resolve(\"path-browserify\"),\n//                       \"os\": require.resolve(\"os-browserify/browser\"),\n//                       \"crypto\": require.resolve(\"crypto-browserify\")\n//                     }\n//                 },\n//             },\n//         );\n//         setChatGPTResponse(response.data.choices[0].message.content);\n//     } catch (error){\n//         console.error('Error generating ChatGPT response:', error.response ? error.response.data : error.message);\n//     }\n//   }\n\n//   return (\n//     <div>\n//       <h1>ChatGPT React Example</h1>\n//       <div>\n//         <label>User Input:</label>\n//         <input\n//           type=\"text\"\n//           value={userInput}\n//           onChange={(e) => setUserInput(e.target.value)}\n//         />\n//       </div>\n//       <button onClick={generateChatGPTResponse}>Generate Response</button>\n//       <div>\n//         <h3>ChatGPT Response:</h3>\n//         <p>{chatGPTResponse}</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ChatGPT;\n"],"mappings":"AAAA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}