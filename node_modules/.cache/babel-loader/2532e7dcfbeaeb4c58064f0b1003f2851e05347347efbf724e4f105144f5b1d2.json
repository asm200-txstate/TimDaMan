{"ast":null,"code":"var _jsxFileName = \"/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/WordleComponents/Keyboard/Keyboard.js\";\nimport React from 'react';\nimport Backspace from '../../../icons/backspace.svg';\nimport './Keyboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst keys = [['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'], ['spacer', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'spacer'], ['Enter', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'Backspace']];\nfunction getKeyClass(guesses, key, correctGuesses, inWordGuesses) {\n  if (key === 'Backspace' || key === 'Enter') {\n    return 'keyboard-key--utility';\n  }\n  if (correctGuesses.includes(key)) {\n    return 'keyboard-key keyboard-key--correct';\n  }\n  if (inWordGuesses.includes(key)) {\n    return 'keyboard-key keyboard-key--in-word';\n  }\n  if (guesses.join('').includes(key)) {\n    return 'keyboard-key keyboard-key--guessed';\n  }\n  return 'keyboard-key';\n}\nexport default function Keyboard({\n  guesses,\n  correctGuesses,\n  inWordGuesses,\n  handleKeyDown\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard-container\",\n    children: keys.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-row\",\n      children: row.map((key, keyIndex) => {\n        if (key === 'spacer') return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyboard-spacer\"\n        }, keyIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 22\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: getKeyClass(guesses, key, correctGuesses, inWordGuesses),\n          onClick: () => handleKeyDown({\n            key\n          }),\n          children: key === 'Backspace' ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Backspace,\n            alt: \"Backspace\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this) : key\n        }, keyIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = Keyboard;\nvar _c;\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","Backspace","jsxDEV","_jsxDEV","keys","getKeyClass","guesses","key","correctGuesses","inWordGuesses","includes","join","Keyboard","handleKeyDown","className","children","map","row","rowIndex","keyIndex","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/WordleComponents/Keyboard/Keyboard.js"],"sourcesContent":["import React from 'react';\nimport Backspace from '../../../icons/backspace.svg';\nimport './Keyboard.css';\n\nconst keys = [\n  ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p'],\n  ['spacer', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'spacer'],\n  ['Enter', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'Backspace'],\n];\n\nfunction getKeyClass(guesses, key, correctGuesses, inWordGuesses) {\n  if (key === 'Backspace' || key === 'Enter') {\n    return 'keyboard-key--utility';\n  }\n\n  if (correctGuesses.includes(key)) {\n    return 'keyboard-key keyboard-key--correct';\n  }\n\n  if (inWordGuesses.includes(key)) {\n    return 'keyboard-key keyboard-key--in-word';\n  }\n\n  if (guesses.join('').includes(key)) {\n    return 'keyboard-key keyboard-key--guessed';\n  }\n\n  return 'keyboard-key';\n}\n\nexport default function Keyboard({\n  guesses,\n  correctGuesses,\n  inWordGuesses,\n  handleKeyDown,\n}) {\n  return (\n    <div className=\"keyboard-container\">\n      {keys.map((row, rowIndex) => (\n        <div className=\"keyboard-row\" key={rowIndex}>\n          {row.map((key, keyIndex) => {\n            if (key === 'spacer')\n              return <div key={keyIndex} className=\"keyboard-spacer\" />;\n\n            return (\n              <button\n                className={getKeyClass(\n                  guesses,\n                  key,\n                  correctGuesses,\n                  inWordGuesses\n                )}\n                key={keyIndex}\n                onClick={() => handleKeyDown({ key })}\n              >\n                {key === 'Backspace' ? (\n                  <img src={Backspace} alt=\"Backspace\" />\n                ) : (\n                  key\n                )}\n              </button>\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,8BAA8B;AACpD,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,IAAI,GAAG,CACX,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAClD,CAAC,QAAQ,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC,EACjE,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,WAAW,CAAC,CAC1D;AAED,SAASC,WAAWA,CAACC,OAAO,EAAEC,GAAG,EAAEC,cAAc,EAAEC,aAAa,EAAE;EAChE,IAAIF,GAAG,KAAK,WAAW,IAAIA,GAAG,KAAK,OAAO,EAAE;IAC1C,OAAO,uBAAuB;EAChC;EAEA,IAAIC,cAAc,CAACE,QAAQ,CAACH,GAAG,CAAC,EAAE;IAChC,OAAO,oCAAoC;EAC7C;EAEA,IAAIE,aAAa,CAACC,QAAQ,CAACH,GAAG,CAAC,EAAE;IAC/B,OAAO,oCAAoC;EAC7C;EAEA,IAAID,OAAO,CAACK,IAAI,CAAC,EAAE,CAAC,CAACD,QAAQ,CAACH,GAAG,CAAC,EAAE;IAClC,OAAO,oCAAoC;EAC7C;EAEA,OAAO,cAAc;AACvB;AAEA,eAAe,SAASK,QAAQA,CAAC;EAC/BN,OAAO;EACPE,cAAc;EACdC,aAAa;EACbI;AACF,CAAC,EAAE;EACD,oBACEV,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,EAChCX,IAAI,CAACY,GAAG,CAAC,CAACC,GAAG,EAAEC,QAAQ,kBACtBf,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BE,GAAG,CAACD,GAAG,CAAC,CAACT,GAAG,EAAEY,QAAQ,KAAK;QAC1B,IAAIZ,GAAG,KAAK,QAAQ,EAClB,oBAAOJ,OAAA;UAAoBW,SAAS,EAAC;QAAiB,GAArCK,QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA+B,CAAC;QAE3D,oBACEpB,OAAA;UACEW,SAAS,EAAET,WAAW,CACpBC,OAAO,EACPC,GAAG,EACHC,cAAc,EACdC,aACF,CAAE;UAEFe,OAAO,EAAEA,CAAA,KAAMX,aAAa,CAAC;YAAEN;UAAI,CAAC,CAAE;UAAAQ,QAAA,EAErCR,GAAG,KAAK,WAAW,gBAClBJ,OAAA;YAAKsB,GAAG,EAAExB,SAAU;YAACyB,GAAG,EAAC;UAAW;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,GAEvChB;QACD,GAPIY,QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQP,CAAC;MAEb,CAAC;IAAC,GAvB+BL,QAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAwBtC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACI,EAAA,GArCuBf,QAAQ;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}