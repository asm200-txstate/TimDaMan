{"ast":null,"code":"var _jsxFileName = \"/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/Game/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { decode } from \"html-entities\";\nimport Confetti from \"react-confetti\";\nimport \"./Game.css\";\nimport useAxios from \"../../hooks/useAxios\";\nimport { globalSettings } from \"../SelectField/Settings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet generated = false;\nlet questions = [];\nfunction refreshPage() {\n  window.location.reload(false);\n}\nexport default function Game() {\n  _s();\n  // Use State Properties\n  const [showFinalResult, setFinalResults] = useState(false);\n  const [currQ, setCurrQ] = useState(0);\n  const [currScore, setScore] = useState(0);\n  const [gameStarted, setGameStart] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //API CALL with 10 general knowlege questions, multiple choice, easy\n  //let apiUrl = \"/api.php?amount=10&category=9&difficulty=easy&type=multiple\";\n  console.log(\"game.js\", globalSettings);\n  let apiUrl = `/api.php?amount=${globalSettings.numberOfQuestions}&category=${globalSettings.category}&difficulty=${globalSettings.difficulty}&type=${globalSettings.type}`;\n  console.log(\"API URL\", apiUrl);\n  const {\n    response,\n    loading\n  } = useAxios({\n    url: apiUrl\n  });\n  console.log(response);\n\n  // Array Shuffler\n  const shuffleArray = array => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  // Map Question and Answers to Array Element\n  const forEachInJSON = (result, resultArr) => {\n    var thisCorrect = result.correct_answer;\n    var correctArray = [{\n      answerText: decode(thisCorrect),\n      isCorrect: true\n    }];\n    var outAnswer = correctArray.concat(result.incorrect_answers.map(result2 => ({\n      answerText: decode(result2),\n      isCorrect: false\n    })));\n    outAnswer = shuffleArray(outAnswer);\n    var tempResult = resultArr;\n    resultArr = tempResult.concat({\n      questionText: decode(result.question),\n      answerOptions: outAnswer\n    });\n    return resultArr;\n  };\n\n  // JSON Mapping Function to setup array like questions from JSON input.\n  const jsonMap = jsonFile => {\n    var returnArray = [];\n    const jsonList = jsonFile.results.map(result => result);\n    jsonList.forEach(result => returnArray = forEachInJSON(result, returnArray));\n    return returnArray;\n  };\n\n  // Map JSON data to questions 2 array\n  if (!loading && !generated) {\n    questions = jsonMap(response);\n    generated = true;\n  }\n  const [answerSelected, revealAnswers] = useState(false);\n\n  // Helper Functions\n  const choiceSelected = isCorrect => {\n    revealAnswers(true); // Display the correct answer\n\n    // Move on to the next question after 650ms.\n    setTimeout(() => {\n      revealAnswers(false);\n      if (isCorrect) {\n        setScore(currScore + 1);\n      }\n      if (currQ + 1 < questions.length) {\n        setCurrQ(currQ + 1);\n      } else {\n        setFinalResults(true);\n      }\n    }, 500);\n  };\n  const startGame = () => {\n    setGameStart(true);\n  };\n\n  // const startScreen = () => {\n  //   setGameStart(false);\n  //   setFinalResults(false);\n  //   setScore(0);\n  //   setCurrQ(0);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-section\",\n    children: [/*#__PURE__*/_jsxDEV(ChatGPTAxios, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-entry\",\n      children: showFinalResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-section\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Congratulations, you scored: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\" \", currScore, \" out of \", questions.length, \" -\", \" \", currScore / questions.length * 100, \"%\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => refreshPage(),\n          className: \"restart-button\",\n          children: [\" \", \"Restart Game\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.href = \"/\",\n          className: \"start-button\",\n          children: [\" \", \"Back to Quiz Selection\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Confetti, {\n          width: 3200,\n          height: 1200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Game is Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this) : gameStarted ? answerSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", questions[currQ].questionText, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), questions[currQ].answerOptions.map(choice => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: choice.isCorrect ? \"jump-out\" : \"option\",\n            style: {\n              backgroundColor: choice.isCorrect ? \"green\" : \"red\"\n            },\n            children: choice.answerText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 19\n          }, this)]\n        }, choice.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", questions[currQ].questionText, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this), questions[currQ].answerOptions.map(choice => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => choiceSelected(choice.isCorrect),\n            className: \"option\",\n            children: choice.answerText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 19\n          }, this)]\n        }, choice.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Welcome to the BORGS Trivia Quiz! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startGame(),\n          className: \"start-button\",\n          children: [\" \", \"Start\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"bHNM4pBKWPFbrJ62B08dOcYhCi8=\", false, function () {\n  return [useAxios];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","decode","Confetti","useAxios","globalSettings","jsxDEV","_jsxDEV","generated","questions","refreshPage","window","location","reload","Game","_s","showFinalResult","setFinalResults","currQ","setCurrQ","currScore","setScore","gameStarted","setGameStart","isLoading","setIsLoading","console","log","apiUrl","numberOfQuestions","category","difficulty","type","response","loading","url","shuffleArray","array","sort","Math","random","forEachInJSON","result","resultArr","thisCorrect","correct_answer","correctArray","answerText","isCorrect","outAnswer","concat","incorrect_answers","map","result2","tempResult","questionText","question","answerOptions","jsonMap","jsonFile","returnArray","jsonList","results","forEach","answerSelected","revealAnswers","choiceSelected","setTimeout","length","startGame","className","children","ChatGPTAxios","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","width","height","choice","style","backgroundColor","id","_c","$RefreshReg$"],"sources":["/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/Game/Game.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { decode } from \"html-entities\";\nimport Confetti from \"react-confetti\";\nimport \"./Game.css\";\nimport useAxios from \"../../hooks/useAxios\";\nimport { globalSettings } from \"../SelectField/Settings\";\n\nlet generated = false;\nlet questions = [];\n\nfunction refreshPage() {\n  window.location.reload(false);\n}\n\nexport default function Game() {\n  // Use State Properties\n  const [showFinalResult, setFinalResults] = useState(false);\n  const [currQ, setCurrQ] = useState(0);\n  const [currScore, setScore] = useState(0);\n  const [gameStarted, setGameStart] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  //API CALL with 10 general knowlege questions, multiple choice, easy\n  //let apiUrl = \"/api.php?amount=10&category=9&difficulty=easy&type=multiple\";\n  console.log(\"game.js\", globalSettings);\n  let apiUrl = `/api.php?amount=${globalSettings.numberOfQuestions}&category=${globalSettings.category}&difficulty=${globalSettings.difficulty}&type=${globalSettings.type}`;\n  console.log(\"API URL\", apiUrl);\n\n  const { response, loading } = useAxios({ url: apiUrl });\n  console.log(response);\n\n  // Array Shuffler\n  const shuffleArray = (array) => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  // Map Question and Answers to Array Element\n  const forEachInJSON = (result, resultArr) => {\n    var thisCorrect = result.correct_answer;\n    var correctArray = [{ answerText: decode(thisCorrect), isCorrect: true }];\n    var outAnswer = correctArray.concat(\n      result.incorrect_answers.map((result2) => ({\n        answerText: decode(result2),\n        isCorrect: false,\n      }))\n    );\n    outAnswer = shuffleArray(outAnswer);\n    var tempResult = resultArr;\n    resultArr = tempResult.concat({\n      questionText: decode(result.question),\n      answerOptions: outAnswer,\n    });\n    return resultArr;\n  };\n\n  // JSON Mapping Function to setup array like questions from JSON input.\n  const jsonMap = (jsonFile) => {\n    var returnArray = [];\n    const jsonList = jsonFile.results.map((result) => result);\n    jsonList.forEach(\n      (result) => (returnArray = forEachInJSON(result, returnArray))\n    );\n    return returnArray;\n  };\n\n  // Map JSON data to questions 2 array\n  if (!loading && !generated) {\n    questions = jsonMap(response);\n    generated = true;\n  }\n\n  const [answerSelected, revealAnswers] = useState(false);\n\n  // Helper Functions\n  const choiceSelected = (isCorrect) => {\n    revealAnswers(true); // Display the correct answer\n\n    // Move on to the next question after 650ms.\n    setTimeout(() => {\n      revealAnswers(false);\n      if (isCorrect) {\n        setScore(currScore + 1);\n      }\n      if (currQ + 1 < questions.length) {\n        setCurrQ(currQ + 1);\n      } else {\n        setFinalResults(true);\n      }\n    }, 500);\n  };\n\n  const startGame = () => {\n    setGameStart(true);\n  };\n\n  // const startScreen = () => {\n  //   setGameStart(false);\n  //   setFinalResults(false);\n  //   setScore(0);\n  //   setCurrQ(0);\n  // };\n\n  return (\n    <div className=\"game-section\">\n      <ChatGPTAxios />\n      <div className=\"question-entry\">\n        {showFinalResult ? (\n          <div className=\"result-section\">\n            {\" \"}\n            {/* Displaying the final results page */}\n            <div>\n              <h1> Congratulations, you scored: </h1>\n              <h2>\n                {\" \"}\n                {currScore} out of {questions.length} -{\" \"}\n                {(currScore / questions.length) * 100}%{\" \"}\n              </h2>\n            </div>\n            <button onClick={() => refreshPage()} className=\"restart-button\">\n              {\" \"}\n              Restart Game{\" \"}\n            </button>\n            <br />\n            <button\n              onClick={() => (window.location.href = \"/\")}\n              className=\"start-button\"\n            >\n              {\" \"}\n              Back to Quiz Selection{\" \"}\n            </button>\n            <Confetti width={3200} height={1200} />\n          </div>\n        ) : isLoading ? (\n          <div>\n            {/* Call API */}\n            {/* figure out loading wheel */}\n            <h1>Game is Loading</h1>\n          </div>\n        ) : gameStarted ? (\n          answerSelected ? (\n            <div>\n              {\" \"}\n              {/* Display if a choice was selected */}\n              <div className=\"question-block\">\n                <h3> {questions[currQ].questionText} </h3>\n              </div>\n              <br />\n              {questions[currQ].answerOptions.map((choice) => (\n                <div key={choice.id}>\n                  <button\n                    className={choice.isCorrect ? \"jump-out\" : \"option\"}\n                    style={{\n                      backgroundColor: choice.isCorrect ? \"green\" : \"red\",\n                    }}\n                  >\n                    {choice.answerText}\n                  </button>\n                  <br />\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>\n              {\" \"}\n              {/* Display if a choice was not selected */}\n              <div className=\"question-block\">\n                <h3> {questions[currQ].questionText} </h3>\n              </div>\n              <br />\n              {questions[currQ].answerOptions.map((choice) => (\n                <div key={choice.id}>\n                  <button\n                    onClick={() => choiceSelected(choice.isCorrect)}\n                    className=\"option\"\n                  >\n                    {choice.answerText}\n                  </button>\n                  <br />\n                </div>\n              ))}\n            </div>\n          )\n        ) : (\n          <div>\n            <div className=\"question-block\">\n              <h1> Welcome to the BORGS Trivia Quiz! </h1>\n            </div>\n            <br />\n            <button onClick={() => startGame()} className=\"start-button\">\n              {\" \"}\n              Start{\" \"}\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}