{"ast":null,"code":"var _jsxFileName = \"/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/hooks/ChatGPTAxios.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CHATGPT_API_URL = 'https://api.openai.com/v1/chat/completions';\nrequire('dotenv').config();\nconst apiKey = process.env.API_KEY;\nconst ChatGPTAxios = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [chatGPTResponse, setChatGPTResponse] = useState('');\n  const generateChatGPTResponse = async () => {\n    try {\n      const response = await axios.post(CHATGPT_API_URL, {\n        model: 'gpt-3.5-turbo',\n        messages: [{\n          role: 'system',\n          content: 'You are a helpful assistant.'\n        }, {\n          role: 'user',\n          content: userInput\n        }]\n      }, {\n        headers: {\n          'Content-Type': 'appllication/json',\n          'Authorization': apiKey\n        }\n      });\n      setChatGPTResponse(response.data.choices[0].message.content);\n    } catch {\n      console.error('Error generating ChatGPT response:', error.response ? error.response.data : error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatGPT React Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"User Input:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userInput,\n        onChange: e => setUserInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateChatGPTResponse,\n      children: \"Generate Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"ChatGPT Response:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: chatGPTResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatGPTAxios, \"v5QNjhZuff+1iUqHUY41VsQWtLE=\");\n_c = ChatGPTAxios;\nexport default ChatGPTAxios;\nvar _c;\n$RefreshReg$(_c, \"ChatGPTAxios\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CHATGPT_API_URL","require","config","apiKey","process","env","API_KEY","ChatGPTAxios","_s","userInput","setUserInput","chatGPTResponse","setChatGPTResponse","generateChatGPTResponse","response","post","model","messages","role","content","headers","data","choices","message","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/hooks/ChatGPTAxios.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst CHATGPT_API_URL = 'https://api.openai.com/v1/chat/completions'; \n\nrequire('dotenv').config();\nconst apiKey = process.env.API_KEY;\n\nconst ChatGPTAxios = () => {\n  const [userInput, setUserInput] = useState('');\n  const [chatGPTResponse, setChatGPTResponse] = useState('');\n\n  const generateChatGPTResponse = async () => {\n    try{\n        const response = await axios.post(\n            CHATGPT_API_URL,\n            {\n                model: 'gpt-3.5-turbo', \n                messages: [\n                { role: 'system', content: 'You are a helpful assistant.',},\n                { role: 'user', content: userInput, },\n              ],\n            }, {\n                headers: {\n                    'Content-Type' : 'appllication/json',\n                    'Authorization' : apiKey,\n                },\n            }\n        );\n        setChatGPTResponse(response.data.choices[0].message.content);\n    } catch{\n        console.error('Error generating ChatGPT response:', error.response ? error.response.data : error.message);\n    }\n  }\n\n  return (\n    <div>\n      <h1>ChatGPT React Example</h1>\n      <div>\n        <label>User Input:</label>\n        <input\n          type=\"text\"\n          value={userInput}\n          onChange={(e) => setUserInput(e.target.value)}\n        />\n      </div>\n      <button onClick={generateChatGPTResponse}>Generate Response</button>\n      <div>\n        <h3>ChatGPT Response:</h3>\n        <p>{chatGPTResponse}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatGPTAxios;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}