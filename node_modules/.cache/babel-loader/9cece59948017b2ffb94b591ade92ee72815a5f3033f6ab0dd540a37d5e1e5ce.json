{"ast":null,"code":"var _jsxFileName = \"/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/WordleComponents/Tile/Tile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport './Tile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getTileClassName(isCurrentRow, rowHasGuess, word, value, index) {\n  if (isCurrentRow) {\n    return 'Tile Tile--current-row';\n  }\n  if (value === word[index]) {\n    return 'Tile Tile--correct';\n  }\n  if (word.includes(value)) {\n    return 'Tile Tile--in-word';\n  }\n  if (rowHasGuess) {\n    return 'Tile Tile--guessed';\n  }\n  return 'Tile';\n}\nexport default function Tile({\n  isCurrentRow,\n  index,\n  value,\n  word,\n  rowHasGuess\n}) {\n  _s();\n  const controls = useAnimation();\n  const FLIP_DURATION = 0.75;\n  useEffect(() => {\n    if (isCurrentRow && value) {\n      controls.start({\n        scale: [1.1, 1],\n        transition: {\n          duration: 0.1,\n          ease: 'easeInOut'\n        }\n      });\n    }\n    if (!isCurrentRow && value) {\n      controls.start({\n        rotateX: 360,\n        transition: {\n          duration: FLIP_DURATION,\n          delay: 0.2 * index\n        }\n      });\n    }\n  }, [controls, index, isCurrentRow, value]);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: getTileClassName(isCurrentRow, rowHasGuess, word, value, index),\n    animate: controls,\n    initial: false,\n    children: value !== null && value !== void 0 ? value : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Tile, \"6pZ2lBElA3YLtcQOKE/nS/LmH94=\", false, function () {\n  return [useAnimation];\n});\n_c = Tile;\nvar _c;\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"names":["React","useEffect","motion","useAnimation","jsxDEV","_jsxDEV","getTileClassName","isCurrentRow","rowHasGuess","word","value","index","includes","Tile","_s","controls","FLIP_DURATION","start","scale","transition","duration","ease","rotateX","delay","div","className","animate","initial","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/WordleComponents/Tile/Tile.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { motion, useAnimation } from 'framer-motion';\nimport './Tile.css';\n\nfunction getTileClassName(isCurrentRow, rowHasGuess, word, value, index) {\n  if (isCurrentRow) {\n    return 'Tile Tile--current-row';\n  }\n\n  if (value === word[index]) {\n    return 'Tile Tile--correct';\n  }\n\n  if (word.includes(value)) {\n    return 'Tile Tile--in-word';\n  }\n\n  if (rowHasGuess) {\n    return 'Tile Tile--guessed';\n  }\n\n  return 'Tile';\n}\n\nexport default function Tile({\n  isCurrentRow,\n  index,\n  value,\n  word,\n  rowHasGuess,\n}) {\n  const controls = useAnimation();\n  const FLIP_DURATION = 0.75;\n\n  useEffect(() => {\n    if (isCurrentRow && value) {\n      controls.start({\n        scale: [1.1, 1],\n        transition: { duration: 0.1, ease: 'easeInOut' },\n      });\n    }\n\n    if (!isCurrentRow && value) {\n      controls.start({\n        rotateX: 360,\n        transition: { duration: FLIP_DURATION, delay: 0.2 * index },\n      });\n    }\n  }, [controls, index, isCurrentRow, value]);\n\n  return (\n    <motion.div\n      className={getTileClassName(\n        isCurrentRow,\n        rowHasGuess,\n        word,\n        value,\n        index\n      )}\n      animate={controls}\n      initial={false}\n    >\n      {value ?? ''}\n    </motion.div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AACpD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,gBAAgBA,CAACC,YAAY,EAAEC,WAAW,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACvE,IAAIJ,YAAY,EAAE;IAChB,OAAO,wBAAwB;EACjC;EAEA,IAAIG,KAAK,KAAKD,IAAI,CAACE,KAAK,CAAC,EAAE;IACzB,OAAO,oBAAoB;EAC7B;EAEA,IAAIF,IAAI,CAACG,QAAQ,CAACF,KAAK,CAAC,EAAE;IACxB,OAAO,oBAAoB;EAC7B;EAEA,IAAIF,WAAW,EAAE;IACf,OAAO,oBAAoB;EAC7B;EAEA,OAAO,MAAM;AACf;AAEA,eAAe,SAASK,IAAIA,CAAC;EAC3BN,YAAY;EACZI,KAAK;EACLD,KAAK;EACLD,IAAI;EACJD;AACF,CAAC,EAAE;EAAAM,EAAA;EACD,MAAMC,QAAQ,GAAGZ,YAAY,CAAC,CAAC;EAC/B,MAAMa,aAAa,GAAG,IAAI;EAE1Bf,SAAS,CAAC,MAAM;IACd,IAAIM,YAAY,IAAIG,KAAK,EAAE;MACzBK,QAAQ,CAACE,KAAK,CAAC;QACbC,KAAK,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;QACfC,UAAU,EAAE;UAAEC,QAAQ,EAAE,GAAG;UAAEC,IAAI,EAAE;QAAY;MACjD,CAAC,CAAC;IACJ;IAEA,IAAI,CAACd,YAAY,IAAIG,KAAK,EAAE;MAC1BK,QAAQ,CAACE,KAAK,CAAC;QACbK,OAAO,EAAE,GAAG;QACZH,UAAU,EAAE;UAAEC,QAAQ,EAAEJ,aAAa;UAAEO,KAAK,EAAE,GAAG,GAAGZ;QAAM;MAC5D,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACI,QAAQ,EAAEJ,KAAK,EAAEJ,YAAY,EAAEG,KAAK,CAAC,CAAC;EAE1C,oBACEL,OAAA,CAACH,MAAM,CAACsB,GAAG;IACTC,SAAS,EAAEnB,gBAAgB,CACzBC,YAAY,EACZC,WAAW,EACXC,IAAI,EACJC,KAAK,EACLC,KACF,CAAE;IACFe,OAAO,EAAEX,QAAS;IAClBY,OAAO,EAAE,KAAM;IAAAC,QAAA,EAEdlB,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI;EAAE;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB;AAAClB,EAAA,CAzCuBD,IAAI;EAAA,QAOTV,YAAY;AAAA;AAAA8B,EAAA,GAPPpB,IAAI;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}