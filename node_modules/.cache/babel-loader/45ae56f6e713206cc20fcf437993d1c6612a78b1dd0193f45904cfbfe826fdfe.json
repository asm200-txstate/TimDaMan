{"ast":null,"code":"var _jsxFileName = \"/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/SelectField/Settings.js\",\n  _s = $RefreshSig$();\nimport { Box, CircularProgress, Typography } from \"@mui/material\";\nimport SelectField from \"./SelectField\";\nimport GoButton from \"./GoButton\";\nimport useAxios from \"../../hooks/useAxios\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst globalSettings = {\n  category: \"9\",\n  difficulty: \"easy\",\n  type: \"multiple\",\n  numberOfQuestions: \"10\"\n};\nexport { globalSettings };\nconst Settings = () => {\n  _s();\n  const {\n    response,\n    error,\n    loading\n  } = useAxios({\n    url: \"/api_category.php\"\n  });\n  const [selectedSettings, setSelectedSettings] = useState({\n    category: \"9\",\n    difficulty: \"easy\",\n    type: \"multiple\",\n    numberOfQuestions: \"10\"\n  });\n\n  //console.log(selectedSettings);\n\n  const handleSettingChange = (settingName, settingValue) => {\n    setSelectedSettings({\n      ...selectedSettings,\n      [settingName]: settingValue\n    });\n    globalSettings[settingName] = settingValue;\n    //console.log(globalSettings);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      mt: 20,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      mt: 20,\n      color: \"red\",\n      children: \"Something Went Wrong!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n  const difficultyOptions = [{\n    id: \"easy\",\n    name: \"Easy\"\n  }, {\n    id: \"medium\",\n    name: \"Medium\"\n  }, {\n    id: \"hard\",\n    name: \"Hard\"\n  }];\n  const typeOptions = [{\n    id: \"multiple\",\n    name: \"Multiple Choice\"\n  }, {\n    id: \"boolean\",\n    name: \"True or False\"\n  }];\n  const numOptions = [{\n    id: \"1\",\n    name: \"1\"\n  }, {\n    id: \"5\",\n    name: \"5\"\n  }, {\n    id: \"10\",\n    name: \"10\"\n  }, {\n    id: \"15\",\n    name: \"15\"\n  }, {\n    id: \"20\",\n    name: \"20\"\n  }, {\n    id: \"25\",\n    name: \"25\"\n  }, {\n    id: \"30\",\n    name: \"30\"\n  }, {\n    id: \"35\",\n    name: \"35\"\n  }, {\n    id: \"40\",\n    name: \"40\"\n  }, {\n    id: \"45\",\n    name: \"45\"\n  }, {\n    id: \"50\",\n    name: \"50\"\n  }];\n  const handleSubmit = userInputForm => {\n    userInputForm.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 1,\n    style: {\n      width: \"400px\",\n      margin: \"1rem auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(SelectField, {\n        options: response.trivia_categories,\n        code: \"category\",\n        onSettingChange: handleSettingChange,\n        label: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        options: difficultyOptions,\n        code: \"difficulty\",\n        onSettingChange: handleSettingChange,\n        label: \"Difficulty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        options: typeOptions,\n        code: \"type\",\n        onSettingChange: handleSettingChange,\n        label: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n        options: numOptions,\n        code: \"numberOfQuestions\",\n        onSettingChange: handleSettingChange,\n        label: \"Number of Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n//\n_s(Settings, \"Q5H2gtC0xlblvyDeqQRMAFl3s2s=\", false, function () {\n  return [useAxios];\n});\n_c = Settings;\nexport default Settings;\n\n//CURRENT ISSUES\n//Certain combinations of categories, types, and difficulties have fewer than 20 questions. \n//Once the api is called, the response is an empty array, which crashes the website upon starting the game.\n//This problem is too large to resolve this sprint, though a quick fix is to use only 10 questions per quiz.\n//It appears that every combination works with 10 questions without issue.\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["Box","CircularProgress","Typography","SelectField","GoButton","useAxios","React","useState","jsxDEV","_jsxDEV","globalSettings","category","difficulty","type","numberOfQuestions","Settings","_s","response","error","loading","url","selectedSettings","setSelectedSettings","handleSettingChange","settingName","settingValue","mt","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","color","difficultyOptions","id","name","typeOptions","numOptions","handleSubmit","userInputForm","preventDefault","style","width","margin","onSubmit","options","trivia_categories","code","onSettingChange","label","_c","$RefreshReg$"],"sources":["/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/SelectField/Settings.js"],"sourcesContent":["import { Box, CircularProgress, Typography } from \"@mui/material\";\nimport SelectField from \"./SelectField\";\nimport GoButton from \"./GoButton\";\nimport useAxios from \"../../hooks/useAxios\";\nimport React, { useState } from \"react\";\n\nconst globalSettings = {\n    category: \"9\",\n    difficulty: \"easy\",\n    type: \"multiple\",\n    numberOfQuestions: \"10\",\n};\nexport {globalSettings};\n\nconst Settings = () => {\n\n    const { response, error, loading } =useAxios({ url: \"/api_category.php\"});\n\n    const [selectedSettings, setSelectedSettings] = useState({\n        category: \"9\",\n        difficulty: \"easy\",\n        type: \"multiple\",\n        numberOfQuestions: \"10\",\n    });\n\n    //console.log(selectedSettings);\n\n    const handleSettingChange = (settingName, settingValue) => {\n        setSelectedSettings({ ...selectedSettings, [settingName]: settingValue });\n        globalSettings[settingName] = settingValue;\n        //console.log(globalSettings);\n    };\n\n    if(loading){\n        return(\n            <Box mt={20}>\n                <CircularProgress />\n            </Box>\n        )\n    }\n\n    if(error){\n        return(\n            <Typography variant=\"h6\" mt={20} color=\"red\">\n                Something Went Wrong!\n            </Typography>\n        )\n    }\n    \n    const difficultyOptions = [\n        { id: \"easy\", name: \"Easy\" },\n        { id: \"medium\", name: \"Medium\" },\n        { id: \"hard\", name: \"Hard\" },\n    ]\n\n    const typeOptions = [\n        { id: \"multiple\", name: \"Multiple Choice\" },\n        { id: \"boolean\", name: \"True or False\" },\n    ]\n\n    const numOptions = [\n        { id: \"1\", name: \"1\" },\n        { id: \"5\", name: \"5\" },\n        { id: \"10\", name: \"10\" },\n        { id: \"15\", name: \"15\" },\n        { id: \"20\", name: \"20\" },\n        { id: \"25\", name: \"25\" },\n        { id: \"30\", name: \"30\" },\n        { id: \"35\", name: \"35\" },\n        { id: \"40\", name: \"40\" },\n        { id: \"45\", name: \"45\" },\n        { id: \"50\", name: \"50\" },\n      ];\n\n    const handleSubmit = (userInputForm) => {\n        userInputForm.preventDefault();\n    };\n    \n    return (\n        <Box mt={1} style={{ width:\"400px\", margin:\"1rem auto\"}}>\n        <form onSubmit={handleSubmit}>\n        <SelectField options={response.trivia_categories} code=\"category\" onSettingChange={handleSettingChange} label=\"Category\" />\n        <SelectField options={difficultyOptions} code=\"difficulty\" onSettingChange={handleSettingChange} label=\"Difficulty\" />\n        <SelectField options={typeOptions} code=\"type\" onSettingChange={handleSettingChange} label=\"Type\" />\n        <SelectField options={numOptions} code=\"numberOfQuestions\" onSettingChange={handleSettingChange} label=\"Number of Questions\" />\n        <GoButton/>\n        </form>\n        </Box>\n        \n    );\n};\n//\n\nexport default Settings; \n\n//CURRENT ISSUES\n//Certain combinations of categories, types, and difficulties have fewer than 20 questions. \n//Once the api is called, the response is an empty array, which crashes the website upon starting the game.\n//This problem is too large to resolve this sprint, though a quick fix is to use only 10 questions per quiz.\n//It appears that every combination works with 10 questions without issue."],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}