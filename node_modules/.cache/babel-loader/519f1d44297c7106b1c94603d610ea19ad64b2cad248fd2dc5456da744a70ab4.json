{"ast":null,"code":"var _jsxFileName = \"/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/Game/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { decode } from \"html-entities\";\nimport Confetti from \"react-confetti\";\nimport \"./Game.css\";\nimport { APIresponse } from \"../SelectField/CheckQuiz\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet generated = false;\nlet questions = [];\nfunction refreshPage() {\n  window.location.reload(false);\n}\nexport default function Game() {\n  _s();\n  // Use State Properties\n  const [showFinalResult, setFinalResults] = useState(false);\n  const [currQ, setCurrQ] = useState(0);\n  const [currScore, setScore] = useState(0);\n  const [gameStarted, setGameStart] = useState(false);\n  const [buttonResponse, setButtonResponse] = useState(false);\n  const [freeResponse, setFreeResponse] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [buttonAnswerSelected, revealButtonAnswers] = useState(false);\n  const [freeAnswerSelected, revealFreeAnswers] = useState(false);\n  const [quizReady, setQuizReady] = useState(false);\n  const [tempVar, setTempVar] = useState(true);\n  const navigate = useNavigate();\n  if (APIresponse == undefined) {\n    navigate(\"/checkquiz\");\n  }\n  console.log(\"API RESPONSE WITHIN GAME\", APIresponse);\n\n  // Array Shuffler\n  const shuffleArray = array => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  // Map Question and Answers to Array Element\n  const forEachInJSON = (result, resultArr) => {\n    var thisCorrect = result.correct_answer;\n    var correctArray = [{\n      answerText: decode(thisCorrect),\n      isCorrect: true\n    }];\n    var outAnswer = correctArray.concat(result.incorrect_answers.map(result2 => ({\n      answerText: decode(result2),\n      isCorrect: false\n    })));\n    outAnswer = shuffleArray(outAnswer);\n    var tempResult = resultArr;\n    resultArr = tempResult.concat({\n      questionText: decode(result.question),\n      answerOptions: outAnswer\n    });\n    return resultArr;\n  };\n\n  // JSON Mapping Function to setup array like questions from JSON input.\n  const jsonMap = jsonFile => {\n    var returnArray = [];\n    const jsonList = jsonFile.results.map(result => result);\n    jsonList.forEach(result => returnArray = forEachInJSON(result, returnArray));\n    setQuizReady(true);\n    return returnArray;\n  };\n\n  // Map JSON data to questions 2 array\n  if (APIresponse != undefined) {\n    if (!generated) {\n      questions = jsonMap(APIresponse);\n      generated = true;\n    }\n  }\n\n  // Helper Functions\n  const choiceSelected = isCorrect => {\n    revealButtonAnswers(true); // Display the correct answer\n\n    // Move on to the next question after 650ms.\n    setTimeout(() => {\n      revealButtonAnswers(false);\n      if (isCorrect) {\n        setScore(currScore + 1);\n      }\n      if (currQ + 1 < questions.length) {\n        setCurrQ(currQ + 1);\n      } else {\n        setFinalResults(true);\n      }\n    }, 500);\n  };\n  const startGame = () => {\n    setGameStart(true);\n  };\n  const checkGame = () => {\n    if (APIresponse != undefined) {\n      setQuizReady(true);\n    } else {\n      navigate(\"/checkquiz\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-entry\",\n      children: showFinalResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-section\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Congratulations, you scored: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\" \", currScore, \" out of \", questions.length, \" -\", \" \", currScore / questions.length * 100, \"%\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => refreshPage(),\n          className: \"restart-button\",\n          children: [\" \", \"Restart Game\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.href = \"/\",\n          className: \"start-button\",\n          children: [\" \", \"Back to Quiz Selection\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Confetti, {\n          width: 3200,\n          height: 1200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this) : isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Game is Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this) : gameStarted ? buttonAnswerSelected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", questions[currQ].questionText, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), questions[currQ].answerOptions.map(choice => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: choice.isCorrect ? \"jump-out\" : \"option\",\n            style: {\n              backgroundColor: choice.isCorrect ? \"green\" : \"red\"\n            },\n            children: choice.answerText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this)]\n        }, choice.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this) : freeAnswerSelected ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this) : freeResponse ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", questions[currQ].questionText, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this), questions[currQ].answerOptions.map(answer => answer.isCorrect ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option\",\n          children: [\" \", answer.answerText, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }, this) : null)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\" \", questions[currQ].questionText, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }, this), questions[currQ].answerOptions.map(choice => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => choiceSelected(choice.isCorrect),\n            className: \"option\",\n            children: choice.answerText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this)]\n        }, choice.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this) : quizReady ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Welcome to the BORGS Trivia Quiz! \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startGame(),\n          className: \"start-button\",\n          children: [\" \", \"Start\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this) : tempVar ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"script\", {\n          children: checkGame()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-block\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \" Press button to generate a random quiz or click \\\"Home\\\" to specify settings \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => checkGame(),\n            className: \"start-button\",\n            children: [\" \", \"Generate Random Quiz\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"s2HlioJCDigr+ZnRqq11c2UOtoM=\", false, function () {\n  return [useNavigate];\n});\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","decode","Confetti","APIresponse","useNavigate","jsxDEV","_jsxDEV","generated","questions","refreshPage","window","location","reload","Game","_s","showFinalResult","setFinalResults","currQ","setCurrQ","currScore","setScore","gameStarted","setGameStart","buttonResponse","setButtonResponse","freeResponse","setFreeResponse","isLoading","setIsLoading","buttonAnswerSelected","revealButtonAnswers","freeAnswerSelected","revealFreeAnswers","quizReady","setQuizReady","tempVar","setTempVar","navigate","undefined","console","log","shuffleArray","array","sort","Math","random","forEachInJSON","result","resultArr","thisCorrect","correct_answer","correctArray","answerText","isCorrect","outAnswer","concat","incorrect_answers","map","result2","tempResult","questionText","question","answerOptions","jsonMap","jsonFile","returnArray","jsonList","results","forEach","choiceSelected","setTimeout","length","startGame","checkGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","href","width","height","choice","style","backgroundColor","id","answer","_c","$RefreshReg$"],"sources":["/Users/axelsm/Desktop/Fall23/Software Engineering/react_trivia_app/src/components/Game/Game.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { decode } from \"html-entities\";\nimport Confetti from \"react-confetti\";\nimport \"./Game.css\";\nimport { APIresponse } from \"../SelectField/CheckQuiz\";\nimport { useNavigate } from 'react-router-dom';\n\nlet generated = false;\nlet questions = [];\n\nfunction refreshPage() {\n  window.location.reload(false);\n}\n\nexport default function Game() {\n  // Use State Properties\n  const [showFinalResult, setFinalResults] = useState(false);\n  const [currQ, setCurrQ] = useState(0);\n  const [currScore, setScore] = useState(0);\n  const [gameStarted, setGameStart] = useState(false);\n  const [buttonResponse, setButtonResponse] = useState(false);\n  const [freeResponse, setFreeResponse] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [buttonAnswerSelected, revealButtonAnswers] = useState(false);\n  const [freeAnswerSelected, revealFreeAnswers] = useState(false);\n  const [quizReady, setQuizReady] = useState(false)\n  const [tempVar, setTempVar] = useState(true)\n\n\n  const navigate = useNavigate();\n  if (APIresponse == undefined){\n    (navigate(\"/checkquiz\"));\n  }\n  console.log(\"API RESPONSE WITHIN GAME\", APIresponse);\n\n\n\n  // Array Shuffler\n  const shuffleArray = (array) => {\n    return array.sort(() => Math.random() - 0.5);\n  };\n\n  // Map Question and Answers to Array Element\n  const forEachInJSON = (result, resultArr) => {\n    var thisCorrect = result.correct_answer;\n    var correctArray = [{ answerText: decode(thisCorrect), isCorrect: true }];\n    var outAnswer = correctArray.concat(\n      result.incorrect_answers.map((result2) => ({\n        answerText: decode(result2),\n        isCorrect: false,\n      }))\n    );\n    outAnswer = shuffleArray(outAnswer);\n    var tempResult = resultArr;\n    resultArr = tempResult.concat({\n      questionText: decode(result.question),\n      answerOptions: outAnswer,\n    });\n    return resultArr;\n    \n  };\n\n  // JSON Mapping Function to setup array like questions from JSON input.\n  const jsonMap = (jsonFile) => {\n    var returnArray = [];\n    const jsonList = jsonFile.results.map((result) => result);\n    jsonList.forEach(\n      (result) => (returnArray = forEachInJSON(result, returnArray))\n    );\n    setQuizReady(true);\n    return returnArray;\n  };\n\n  // Map JSON data to questions 2 array\n  if(APIresponse!= undefined){\n    if (!generated) {\n      questions = jsonMap(APIresponse);\n      generated = true;\n    }\n  }\n\n\n\n  // Helper Functions\n  const choiceSelected = (isCorrect) => {\n    revealButtonAnswers(true); // Display the correct answer\n\n    // Move on to the next question after 650ms.\n    setTimeout(() => {\n      revealButtonAnswers(false);\n      if (isCorrect) {\n        setScore(currScore + 1);\n      }\n      if (currQ + 1 < questions.length) {\n        setCurrQ(currQ + 1);\n      } else {\n        setFinalResults(true);\n      }\n    }, 500);\n    \n  };\n\n  const startGame = () => {\n    setGameStart(true);\n  };\n  \n  const checkGame = () => {\n    if(APIresponse!= undefined){\n      setQuizReady(true);\n    }\n    else{\n      navigate(\"/checkquiz\");\n    }\n  };\n\n\n\n  return (\n    <div className=\"game-section\">\n      <div className=\"question-entry\">\n        {showFinalResult ? (\n          <div className=\"result-section\">\n            {\" \"}\n            {/* Displaying the final results page */}\n            <div>\n              <h1> Congratulations, you scored: </h1>\n              <h2>\n                {\" \"}\n                {currScore} out of {questions.length} -{\" \"}\n                {(currScore / questions.length) * 100}%{\" \"}\n              </h2>\n            </div>\n            <button onClick={() => refreshPage()} className=\"restart-button\">\n              {\" \"}\n              Restart Game{\" \"}\n            </button>\n            <br />\n            <button\n              onClick={() => (window.location.href = \"/\")}\n              className=\"start-button\"\n            >\n              {\" \"}\n              Back to Quiz Selection{\" \"}\n            </button>\n            <Confetti width={3200} height={1200} />\n          </div>\n        ) : isLoading ? (\n          <div>\n            {/* Call API */}\n            {/* figure out loading wheel */}\n            <h1>Game is Loading</h1>\n          </div>\n        ) : gameStarted ? (\n          buttonAnswerSelected ? (\n            <div>\n              {\" \"}\n              {/* Display if a choice was selected */}\n              <div className=\"question-block\">\n                <h3> {questions[currQ].questionText} </h3>\n              </div>\n              <br />\n              {questions[currQ].answerOptions.map((choice) => (\n                <div key={choice.id}>\n                  <button\n                    className={choice.isCorrect ? \"jump-out\" : \"option\"}\n                    style={{\n                      backgroundColor: choice.isCorrect ? \"green\" : \"red\",\n                    }}\n                  >\n                    {choice.answerText}\n                  </button>\n                  <br />\n                </div>\n              ))}\n            </div>\n          ) : freeAnswerSelected ? (\n            <div></div>\n          ) : freeResponse ? (\n            <div>\n              {\" \"}\n              {/* Display if free response, answer not submitted */}\n              <div className=\"question-block\">\n                <h3> {questions[currQ].questionText} </h3>\n              </div>\n              <br />\n              {questions[currQ].answerOptions.map((answer) =>\n                answer.isCorrect ? (\n                  <div className=\"option\"> {answer.answerText} </div>\n                ) : null\n              )}\n            </div>\n          ) : (\n            <div>\n              {\" \"}\n              {/* Display if a choice was not selected */}\n              <div className=\"question-block\">\n                <h3> {questions[currQ].questionText} </h3>\n              </div>\n              <br />\n              {questions[currQ].answerOptions.map((choice) => (\n                <div key={choice.id}>\n                  <button\n                    onClick={() => choiceSelected(choice.isCorrect)}\n                    className=\"option\"\n                  >\n                    {choice.answerText}\n                  </button>\n                  <br />\n                </div>\n              ))}\n            </div>\n          )\n        ) : quizReady ?(\n          <div>\n            <div className=\"question-block\">\n              <h1> Welcome to the BORGS Trivia Quiz! </h1>\n            </div>\n            <br />\n            <button onClick={() => startGame()} className=\"start-button\">\n              {\" \"}\n              Start{\" \"}\n            </button>\n          </div>\n        ): tempVar? (\n          <div>\n            <script>{checkGame()}</script>\n            <div className=\"question-block\">\n              <h1> Press button to generate a random quiz or click \"Home\" to specify settings </h1>\n            </div>\n            <div>\n            <button onClick={() => checkGame()} className=\"start-button\">\n              {\" \"}\n              Generate Random Quiz{\" \"}\n            </button>\n          </div>\n            \n          </div>\n        ) : (\n          <div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAO,YAAY;AACnB,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,IAAIC,SAAS,GAAG,KAAK;AACrB,IAAIC,SAAS,GAAG,EAAE;AAElB,SAASC,WAAWA,CAAA,EAAG;EACrBC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,KAAK,CAAC;AAC/B;AAEA,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC7B;EACA,MAAM,CAACC,eAAe,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC1D,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACmB,SAAS,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACqB,WAAW,EAAEC,YAAY,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACuB,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC6B,oBAAoB,EAAEC,mBAAmB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAAC+B,kBAAkB,EAAEC,iBAAiB,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACiC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EAG5C,MAAMqC,QAAQ,GAAGjC,WAAW,CAAC,CAAC;EAC9B,IAAID,WAAW,IAAImC,SAAS,EAAC;IAC1BD,QAAQ,CAAC,YAAY,CAAC;EACzB;EACAE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAErC,WAAW,CAAC;;EAIpD;EACA,MAAMsC,YAAY,GAAIC,KAAK,IAAK;IAC9B,OAAOA,KAAK,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;EAC9C,CAAC;;EAED;EACA,MAAMC,aAAa,GAAGA,CAACC,MAAM,EAAEC,SAAS,KAAK;IAC3C,IAAIC,WAAW,GAAGF,MAAM,CAACG,cAAc;IACvC,IAAIC,YAAY,GAAG,CAAC;MAAEC,UAAU,EAAEnD,MAAM,CAACgD,WAAW,CAAC;MAAEI,SAAS,EAAE;IAAK,CAAC,CAAC;IACzE,IAAIC,SAAS,GAAGH,YAAY,CAACI,MAAM,CACjCR,MAAM,CAACS,iBAAiB,CAACC,GAAG,CAAEC,OAAO,KAAM;MACzCN,UAAU,EAAEnD,MAAM,CAACyD,OAAO,CAAC;MAC3BL,SAAS,EAAE;IACb,CAAC,CAAC,CACJ,CAAC;IACDC,SAAS,GAAGb,YAAY,CAACa,SAAS,CAAC;IACnC,IAAIK,UAAU,GAAGX,SAAS;IAC1BA,SAAS,GAAGW,UAAU,CAACJ,MAAM,CAAC;MAC5BK,YAAY,EAAE3D,MAAM,CAAC8C,MAAM,CAACc,QAAQ,CAAC;MACrCC,aAAa,EAAER;IACjB,CAAC,CAAC;IACF,OAAON,SAAS;EAElB,CAAC;;EAED;EACA,MAAMe,OAAO,GAAIC,QAAQ,IAAK;IAC5B,IAAIC,WAAW,GAAG,EAAE;IACpB,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,OAAO,CAACV,GAAG,CAAEV,MAAM,IAAKA,MAAM,CAAC;IACzDmB,QAAQ,CAACE,OAAO,CACbrB,MAAM,IAAMkB,WAAW,GAAGnB,aAAa,CAACC,MAAM,EAAEkB,WAAW,CAC9D,CAAC;IACD/B,YAAY,CAAC,IAAI,CAAC;IAClB,OAAO+B,WAAW;EACpB,CAAC;;EAED;EACA,IAAG9D,WAAW,IAAGmC,SAAS,EAAC;IACzB,IAAI,CAAC/B,SAAS,EAAE;MACdC,SAAS,GAAGuD,OAAO,CAAC5D,WAAW,CAAC;MAChCI,SAAS,GAAG,IAAI;IAClB;EACF;;EAIA;EACA,MAAM8D,cAAc,GAAIhB,SAAS,IAAK;IACpCvB,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC;;IAE3B;IACAwC,UAAU,CAAC,MAAM;MACfxC,mBAAmB,CAAC,KAAK,CAAC;MAC1B,IAAIuB,SAAS,EAAE;QACbjC,QAAQ,CAACD,SAAS,GAAG,CAAC,CAAC;MACzB;MACA,IAAIF,KAAK,GAAG,CAAC,GAAGT,SAAS,CAAC+D,MAAM,EAAE;QAChCrD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;MACrB,CAAC,MAAM;QACLD,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC,EAAE,GAAG,CAAC;EAET,CAAC;EAED,MAAMwD,SAAS,GAAGA,CAAA,KAAM;IACtBlD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMmD,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAGtE,WAAW,IAAGmC,SAAS,EAAC;MACzBJ,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MACG;MACFG,QAAQ,CAAC,YAAY,CAAC;IACxB;EACF,CAAC;EAID,oBACE/B,OAAA;IAAKoE,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3BrE,OAAA;MAAKoE,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5B5D,eAAe,gBACdT,OAAA;QAAKoE,SAAS,EAAC,gBAAgB;QAAAC,QAAA,GAC5B,GAAG,eAEJrE,OAAA;UAAAqE,QAAA,gBACErE,OAAA;YAAAqE,QAAA,EAAI;UAA8B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvCzE,OAAA;YAAAqE,QAAA,GACG,GAAG,EACHxD,SAAS,EAAC,UAAQ,EAACX,SAAS,CAAC+D,MAAM,EAAC,IAAE,EAAC,GAAG,EACzCpD,SAAS,GAAGX,SAAS,CAAC+D,MAAM,GAAI,GAAG,EAAC,GAAC,EAAC,GAAG;UAAA;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACNzE,OAAA;UAAQ0E,OAAO,EAAEA,CAAA,KAAMvE,WAAW,CAAC,CAAE;UAACiE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAC7D,GAAG,EAAC,cACO,EAAC,GAAG;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eACTzE,OAAA;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNzE,OAAA;UACE0E,OAAO,EAAEA,CAAA,KAAOtE,MAAM,CAACC,QAAQ,CAACsE,IAAI,GAAG,GAAK;UAC5CP,SAAS,EAAC,cAAc;UAAAC,QAAA,GAEvB,GAAG,EAAC,wBACiB,EAAC,GAAG;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eACTzE,OAAA,CAACJ,QAAQ;UAACgF,KAAK,EAAE,IAAK;UAACC,MAAM,EAAE;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,GACJpD,SAAS,gBACXrB,OAAA;QAAAqE,QAAA,eAGErE,OAAA;UAAAqE,QAAA,EAAI;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,GACJ1D,WAAW,GACbQ,oBAAoB,gBAClBvB,OAAA;QAAAqE,QAAA,GACG,GAAG,eAEJrE,OAAA;UAAKoE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC7BrE,OAAA;YAAAqE,QAAA,GAAI,GAAC,EAACnE,SAAS,CAACS,KAAK,CAAC,CAAC2C,YAAY,EAAC,GAAC;UAAA;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACNzE,OAAA;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACLvE,SAAS,CAACS,KAAK,CAAC,CAAC6C,aAAa,CAACL,GAAG,CAAE2B,MAAM,iBACzC9E,OAAA;UAAAqE,QAAA,gBACErE,OAAA;YACEoE,SAAS,EAAEU,MAAM,CAAC/B,SAAS,GAAG,UAAU,GAAG,QAAS;YACpDgC,KAAK,EAAE;cACLC,eAAe,EAAEF,MAAM,CAAC/B,SAAS,GAAG,OAAO,GAAG;YAChD,CAAE;YAAAsB,QAAA,EAEDS,MAAM,CAAChC;UAAU;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACTzE,OAAA;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GATEK,MAAM,CAACG,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUd,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,GACJhD,kBAAkB,gBACpBzB,OAAA;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,GACTtD,YAAY,gBACdnB,OAAA;QAAAqE,QAAA,GACG,GAAG,eAEJrE,OAAA;UAAKoE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC7BrE,OAAA;YAAAqE,QAAA,GAAI,GAAC,EAACnE,SAAS,CAACS,KAAK,CAAC,CAAC2C,YAAY,EAAC,GAAC;UAAA;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACNzE,OAAA;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACLvE,SAAS,CAACS,KAAK,CAAC,CAAC6C,aAAa,CAACL,GAAG,CAAE+B,MAAM,IACzCA,MAAM,CAACnC,SAAS,gBACd/C,OAAA;UAAKoE,SAAS,EAAC,QAAQ;UAAAC,QAAA,GAAC,GAAC,EAACa,MAAM,CAACpC,UAAU,EAAC,GAAC;QAAA;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,GACjD,IACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,gBAENzE,OAAA;QAAAqE,QAAA,GACG,GAAG,eAEJrE,OAAA;UAAKoE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC7BrE,OAAA;YAAAqE,QAAA,GAAI,GAAC,EAACnE,SAAS,CAACS,KAAK,CAAC,CAAC2C,YAAY,EAAC,GAAC;UAAA;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACNzE,OAAA;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACLvE,SAAS,CAACS,KAAK,CAAC,CAAC6C,aAAa,CAACL,GAAG,CAAE2B,MAAM,iBACzC9E,OAAA;UAAAqE,QAAA,gBACErE,OAAA;YACE0E,OAAO,EAAEA,CAAA,KAAMX,cAAc,CAACe,MAAM,CAAC/B,SAAS,CAAE;YAChDqB,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAEjBS,MAAM,CAAChC;UAAU;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC,eACTzE,OAAA;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAPEK,MAAM,CAACG,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQd,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,GACC9C,SAAS,gBACX3B,OAAA;QAAAqE,QAAA,gBACErE,OAAA;UAAKoE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC7BrE,OAAA;YAAAqE,QAAA,EAAI;UAAmC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACNzE,OAAA;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNzE,OAAA;UAAQ0E,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAAC,CAAE;UAACE,SAAS,EAAC,cAAc;UAAAC,QAAA,GACzD,GAAG,EAAC,OACA,EAAC,GAAG;QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,GACL5C,OAAO,gBACR7B,OAAA;QAAAqE,QAAA,gBACErE,OAAA;UAAAqE,QAAA,EAASF,SAAS,CAAC;QAAC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC9BzE,OAAA;UAAKoE,SAAS,EAAC,gBAAgB;UAAAC,QAAA,eAC7BrE,OAAA;YAAAqE,QAAA,EAAI;UAA4E;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClF,CAAC,eACNzE,OAAA;UAAAqE,QAAA,eACArE,OAAA;YAAQ0E,OAAO,EAAEA,CAAA,KAAMP,SAAS,CAAC,CAAE;YAACC,SAAS,EAAC,cAAc;YAAAC,QAAA,GACzD,GAAG,EAAC,sBACe,EAAC,GAAG;UAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC,gBAENzE,OAAA;QAAAsE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjE,EAAA,CAtOuBD,IAAI;EAAA,QAeTT,WAAW;AAAA;AAAAqF,EAAA,GAfN5E,IAAI;AAAA,IAAA4E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}